module(
    name = "flatbuffers",
    version = "25.1.24",
    compatibility_level = 1,
    repo_name = "com_github_google_flatbuffers",
)

bazel_dep(
    name = "aspect_bazel_lib",
    version = "2.11.0",
)
bazel_dep(
    name = "aspect_rules_esbuild",
    version = "0.21.0",
)
bazel_dep(
    name = "aspect_rules_js",
    version = "2.1.3",
)
bazel_dep(
    name = "aspect_rules_ts",
    version = "3.4.0",
)
bazel_dep(
    name = "grpc",
    version = "1.69.0",
    repo_name = "com_github_grpc_grpc",
)
bazel_dep(
    name = "platforms",
    version = "0.0.10",
)
bazel_dep(
    name = "rules_cc",
    version = "0.0.16",
)
bazel_dep(
    name = "rules_go",
    version = "0.50.1",
    repo_name = "io_bazel_rules_go",
)
bazel_dep(
    name = "rules_nodejs",
    version = "6.3.3",
)
bazel_dep(
    name = "rules_swift",
    version = "1.18.0",
    repo_name = "build_bazel_rules_swift",
)
bazel_dep(
    name = "bazel_skylib",
    version = "1.7.1",
)

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm")
npm.npm_translate_lock(
    name = "flatbuffers_npm",
    npmrc = "//:.npmrc",
    pnpm_lock = "//ts:pnpm-lock.yaml",
    # Override the Bazel package where pnpm-lock.yaml is located and link
    # to the specified package instead.
    root_package = "ts",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "flatbuffers_npm")

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")
use_repo(node, "nodejs_linux_amd64")

rules_ts_ext = use_extension("@aspect_rules_ts//ts:extensions.bzl", "ext")
rules_ts_ext.deps()
use_repo(rules_ts_ext, "npm_typescript")
