// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

library a;

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


export './includes_b_a_generated.dart';
import './includes_b_a_generated.dart';

class C {
  C._(this._bc, this._bcOffset);
  factory C(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<C> reader = _CReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  A? get myA => A.reader.vTableGetNullable(_bc, _bcOffset, 4);
  B? get myB => B.reader.vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'C{myA: ${myA}, myB: ${myB}}';
  }

  CT unpack() => CT(
      myA: myA?.unpack(),
      myB: myB?.unpack());

  static int pack(fb.Builder fbBuilder, CT? object) {
    if (object == null) return 0;
    return object.pack(fbBuilder);
  }
}

class CT implements fb.Packable {
  AT? myA;
  BT? myB;

  CT({
      this.myA,
      this.myB});

  @override
  int pack(fb.Builder fbBuilder) {
    final int? myAOffset = myA?.pack(fbBuilder);
    final int? myBOffset = myB?.pack(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, myAOffset);
    fbBuilder.addOffset(1, myBOffset);
    return fbBuilder.endTable();
  }

  @override
  String toString() {
    return 'CT{myA: ${myA}, myB: ${myB}}';
  }
}

class _CReader extends fb.TableReader<C> {
  const _CReader();

  @override
  C createObject(fb.BufferContext bc, int offset) => 
    C._(bc, offset);
}

class CBuilder {
  CBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addMyAOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addMyBOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CObjectBuilder extends fb.ObjectBuilder {
  final AObjectBuilder? _myA;
  final BObjectBuilder? _myB;

  CObjectBuilder({
    AObjectBuilder? myA,
    BObjectBuilder? myB,
  })
      : _myA = myA,
        _myB = myB;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? myAOffset = _myA?.getOrCreateOffset(fbBuilder);
    final int? myBOffset = _myB?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, myAOffset);
    fbBuilder.addOffset(1, myBOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
