# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class BookReader(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 4

    # BookReader
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # BookReader
    def BooksRead(self): return self._tab.Get(flatbuffers.number_types.Int32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))

def CreateBookReader(builder, booksRead):
    builder.Prep(4, 4)
    builder.PrependInt32(booksRead)
    return builder.Offset()


class BookReaderT(object):

    # BookReaderT
    def __init__(self):
        self.booksRead = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        bookReader = BookReader()
        bookReader.Init(buf, pos)
        return cls.InitFromObj(bookReader)

    @classmethod
    def InitFromObj(cls, bookReader):
        x = BookReaderT()
        x._UnPack(bookReader)
        return x

    # BookReaderT
    def _UnPack(self, bookReader):
        if bookReader is None:
            return
        self.booksRead = bookReader.BooksRead()

    # BookReaderT
    def Pack(self, builder):
        return CreateBookReader(builder, self.booksRead)
