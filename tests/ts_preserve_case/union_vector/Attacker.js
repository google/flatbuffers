// automatically generated by the FlatBuffers compiler, do not modify
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
import * as flatbuffers from 'flatbuffers';
export class Attacker {
    constructor() {
        this.bb = null;
        this.bb_pos = 0;
    }
    __init(i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }
    static getRootAsAttacker(bb, obj) {
        return (obj || new Attacker()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    static getSizePrefixedRootAsAttacker(bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new Attacker()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    sword_attack_damage() {
        const offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    }
    mutate_sword_attack_damage(value) {
        const offset = this.bb.__offset(this.bb_pos, 4);
        if (offset === 0) {
            return false;
        }
        this.bb.writeInt32(this.bb_pos + offset, value);
        return true;
    }
    static getFullyQualifiedName() {
        return 'Attacker';
    }
    static startAttacker(builder) {
        builder.startObject(1);
    }
    static add_sword_attack_damage(builder, sword_attack_damage) {
        builder.addFieldInt32(0, sword_attack_damage, 0);
    }
    static endAttacker(builder) {
        const offset = builder.endObject();
        return offset;
    }
    static createAttacker(builder, sword_attack_damage) {
        Attacker.startAttacker(builder);
        Attacker.add_sword_attack_damage(builder, sword_attack_damage);
        return Attacker.endAttacker(builder);
    }
    unpack() {
        return new AttackerT(this.sword_attack_damage());
    }
    unpackTo(_o) {
        _o.sword_attack_damage = this.sword_attack_damage();
    }
}
export class AttackerT {
    constructor(sword_attack_damage = 0) {
        this.sword_attack_damage = sword_attack_damage;
    }
    pack(builder) {
        return Attacker.createAttacker(builder, this.sword_attack_damage);
    }
}
