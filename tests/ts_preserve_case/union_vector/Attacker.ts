// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



export class Attacker implements flatbuffers.IUnpackableObject<AttackerT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Attacker {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsAttacker(bb:flatbuffers.ByteBuffer, obj?:Attacker):Attacker {
  return (obj || new Attacker()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsAttacker(bb:flatbuffers.ByteBuffer, obj?:Attacker):Attacker {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Attacker()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

sword_attack_damage():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

mutate_sword_attack_damage(value:number):boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb!.writeInt32(this.bb_pos + offset, value);
  return true;
}

static getFullyQualifiedName():string {
  return 'Attacker';
}

static startAttacker(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static add_sword_attack_damage(builder:flatbuffers.Builder, sword_attack_damage:number) {
  builder.addFieldInt32(0, sword_attack_damage, 0);
}

static endAttacker(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createAttacker(builder:flatbuffers.Builder, sword_attack_damage:number):flatbuffers.Offset {
  Attacker.startAttacker(builder);
  Attacker.add_sword_attack_damage(builder, sword_attack_damage);
  return Attacker.endAttacker(builder);
}

unpack(): AttackerT {
  return new AttackerT(
    this.sword_attack_damage()
  );
}


unpackTo(_o: AttackerT): void {
  _o.sword_attack_damage = this.sword_attack_damage();
}
}

export class AttackerT implements flatbuffers.IGeneratedObject {
constructor(
  public sword_attack_damage: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return Attacker.createAttacker(builder,
    this.sword_attack_damage
  );
}
}
