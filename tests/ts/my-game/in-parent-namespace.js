// automatically generated by the FlatBuffers compiler, do not modify
import * as flatbuffers from 'flatbuffers';
export class InParentNamespace {
    constructor() {
        this.bb = null;
        this.bb_pos = 0;
    }
    __init(i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }
    static getRootAsInParentNamespace(bb, obj) {
        return (obj || new InParentNamespace()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    static getSizePrefixedRootAsInParentNamespace(bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new InParentNamespace()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    static getFullyQualifiedName() {
        return 'MyGame.InParentNamespace';
    }
    static startInParentNamespace(builder) {
        builder.startObject(0);
    }
    static endInParentNamespace(builder) {
        const offset = builder.endObject();
        return offset;
    }
    static createInParentNamespace(builder) {
        InParentNamespace.startInParentNamespace(builder);
        return InParentNamespace.endInParentNamespace(builder);
    }
    serialize() {
        return this.bb.bytes();
    }
    static deserialize(buffer) {
        return InParentNamespace.getRootAsInParentNamespace(new flatbuffers.ByteBuffer(buffer));
    }
    unpack() {
        return new InParentNamespaceT();
    }
    unpackTo(_o) { }
}
export class InParentNamespaceT {
    constructor() { }
    pack(builder) {
        return InParentNamespace.createInParentNamespace(builder);
    }
}
